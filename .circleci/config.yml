# # This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
# # orbs:
# #   react: thefrontside/react@0.2.0

# # version: 2.1

# # workflows:
# #   ci-run:
# #     jobs:
# #       - react/install
# #       - react/eslint:
# #           requires:
# #             - react/install
# #       - react/test:
# #           requires:
# #             - react/install
# #       - react/coverage:
# #           requires:
# #             - react/install

# version: 2.1
# jobs:
#   build:
#     working_directory: ~/repo
#     docker:
#       - image: circleci/node:12-browsers
#     steps:
#       - checkout
#       - restore_cache:
#           keys:
#           - v1-dependencies-{{ checksum "package-lock.json" }}
#           - v1-dependencies-
#       - run:
#           name: Install dependencies
#           command: npm install
#       - save_cache:
#           key: v1-dependencies-{{ checksum "package-lock.json" }}
#           paths:
#             - node_modules
#       - run:
#           name: Build
#           command: |
#             if [ $CIRCLE_BRANCH = 'main' ]; then
#               npm run build
#             fi
#       - persist_to_workspace:
#           root: .
#           paths:
#             - .
#   test:
#     -
#   deploy:
#     working_directory: ~/repo
#     docker:
#       - image: innovatorjapan/awscli:latest
#     steps:
#       - attach_workspace:
#           at: .
#       - run:
#           name: Deploy
#           command: |
#             if [ $CIRCLE_BRANCH = 'main' ]; then
#               aws s3 sync build s3://react-cicd-demo-app-mquang-cminh --delete --exact-timestamps;
#             fi
# workflows:
#   build_and_deploy:
#     jobs:
#       - build:
#           filters:
#             branches:
#               only:
#                 - circleci-project-setup
#       - deploy:
#           requires:
#             - build
#           filters:
#             branches:
#               only:
#                 - circleci-project-setup

version: 2.1
orbs:
  aws-s3: circleci/aws-s3@1.0.11
jobs:
  install:
    docker:
      - image: circleci/node:12.9.1-browsers
    working_directory: ~/repo
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: yarn install

      - save_cache:
          paths:
            - node_modules
            - ~/.npm
            - ~/.cache
          key: v1-dependencies-{{ checksum "package.json" }}
  # lint:
  #   docker:
  #     - image: circleci/node:12.9.1-browsers
  #   working_directory: ~/repo
  #   steps:
  #     - checkout

  #     - restore_cache:
  #         keys:
  #           - v1-dependencies-{{ checksum "package.json" }}
  #           # fallback to using the latest cache if no exact match is found
  #           - v1-dependencies-
  #     - run: yarn lint

  #     - save_cache:
  #         paths:
  #           - node_modules
  #           - ~/.npm
  #           - ~/.cache
  #         key: v1-dependencies-{{ checksum "package.json" }}

  # size:
  #   docker:
  #     - image: circleci/node:12.9.1-browsers
  #   working_directory: ~/repo
  #   steps:
  #     - checkout

  #     - restore_cache:
  #         keys:
  #           - v1-dependencies-{{ checksum "package.json" }}
  #           # fallback to using the latest cache if no exact match is found
  #           - v1-dependencies-
  #     - run: yarn size

  #     - save_cache:
  #         paths:
  #           - node_modules
  #           - ~/.npm
  #           - ~/.cache
  #         key: v1-dependencies-{{ checksum "package.json" }}

  test:
    docker:
      - image: circleci/node:12.9.1-browsers
    working_directory: ~/repo
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: yarn test

      - save_cache:
          paths:
            - node_modules
            - ~/.npm
            - ~/.cache
          key: v1-dependencies-{{ checksum "package.json" }}

  build:
    docker:
      - image: circleci/node:12.9.1-browsers
    working_directory: ~/repo
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: yarn build

      - save_cache:
          paths:
            - node_modules
            - ~/.npm
            - ~/.cache
          key: v1-dependencies-{{ checksum "package.json" }}

  deploy:
    docker:
      - image: circleci/node:12.9.1-browsers
    working_directory: ~/repo
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - aws-s3/sync:
          from: build
          to: "s3://react-cicd-demo-app-mquang-cminh/"
          arguments: |
            --acl public-read \
            --cache-control "max-age=86400"
          overwrite: true

workflows:
  ci-wf:
    jobs:
      - install
      # - lint:
      #     requires:
      #       - install
      # - size:
      #     requires:
      #       - install
      - test:
          requires:
            - install
      - build:
          requires:
            # - lint
            # - size
            - test
      - deploy:
          requires:
            - build
